# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.

from flask import request, jsonify

from jose import jwt

oauth2_server_pub_key = """-----BEGIN PUBLIC KEY-----
MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAES5X8XrfKdx9gYayFITc89wad4usrk0n2
7MjiGYvqalizeSWTHEpnd7oea9IQ8T5oJjMVH5cc0H5tFSKilFFeh//wngxIyny6
6+Vq5t5B0V0Ehy01+2ceEon2Y0XDkIKv
-----END PUBLIC KEY-----"""

_token_prefix = "Bearer "


def _get_jwt_scopes(token, audience):
    return jwt.decode(token, oauth2_server_pub_key, audience=audience)["scope"]


def _get_token():
    token = request.headers.get("Authorization", "")
    if token.startswith(_token_prefix):
        return token[len(_token_prefix):]


def _check_scopes(token, allowed_scopes, audience=None):
    if allowed_scopes is None or len(allowed_scopes) == 0:
        return True

    for allowed in allowed_scopes:
        for s in _get_jwt_scopes(token, audience):
            if s == allowed:
                return True

    return False


def authenticate(app, allowed_scopes, audience=None):
    def jwt_authentication():
        token = _get_token()

        if not token:
            return jsonify(message='no JWT token in the request', code=401), 401

        if _check_scopes(token, allowed_scopes) is False:
            return jsonify(message="JWT doesn't contain proper scope", code=403), 403

        return None
    app.before_request(jwt_authentication)

